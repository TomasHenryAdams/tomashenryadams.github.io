{"version":3,"sources":["helpers/queries.tsx","components/Shared/container.tsx","components/Shared/loading.tsx","components/about/index.tsx","components/thumbnails/thumbnail.tsx","helpers/thumbnailHelper.tsx","components/articles/index.tsx","components/projects/index.tsx","components/contact/index.tsx","components/header/navLinks.tsx","components/header/index.tsx","helpers/documentHelper.tsx","components/projects/project.tsx","components/articles/article.tsx","Routing.tsx","App.tsx","reportWebVitals.ts","helpers/apollo.tsx","index.tsx"],"names":["GetProjectThumbnailInfo","gql","GetArticlesThumbnailInfo","GetAbout","Container","styled","div","BounceAnimation","keyframes","DotWrapper","TextWrapper","Dot","props","delay","Loading","Wrapper","StyledText","p","StyledImg","img","About","useQuery","data","loading","aboutCollection","items","map","document","documentToReactComponents","text","json","src","image","url","Border","StyledThumbnail","Text","Thumbnail","to","link","className","title","ThumbnailHelper","query","collection","thumbnailData","sys","id","Articles","Projects","Contact","navLinks","label","href","NavItem","Link","NavLinks","HeaderStyle","AppBar","TextRight","TextLeft","Header","position","MainImage","Title","h1","DocumentHelper","alt","project","Project","projectId","match","params","Article","articleId","Routing","exact","path","component","App","prefersDarkMode","useMediaQuery","theme","React","useMemo","createMuiTheme","palette","primary","main","success","type","typography","fontFamily","join","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Client","ApolloClient","cache","InMemoryCache","uri","headers","Authorization","ReactDOM","render","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.c738a6d2.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GetProjectThumbnailInfo = gql`\n  {\n    projectCollection {\n      items {\n        title\n        image {\n          url\n        }\n        sys {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GetArticlesThumbnailInfo = gql`\n  {\n    articleCollection {\n      items {\n        title\n        image {\n          url\n        }\n        sys {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport const GetProject = (projectId: string) => gql`\n{\n  project(id: \"${projectId}\"){\n    title\n    image{url}\n    text{json}\n  }\n}\n`;\n\nexport const GetArticle = (articleId: string) => gql`\n{\n  article(id: \"${articleId}\"){\n    title\n    image{url}\n    text{json}\n  }\n}\n`;\n\nexport const GetAbout = gql`\n  {\n    aboutCollection {\n      items {\n        text {\n          json\n        }\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 50px, 50px;\n  max-width: 1500px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 80px;\n  border-radius: 10px;\n  border: 10px solid black;\n  background-color: white;\n  color: black;\n`;\n\nexport default Container;","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\ninterface Props {\n  delay: string;\n}\n\nconst BounceAnimation = keyframes`\n  0% { margin-bottom: 0; }\n  50% { margin-bottom: 15px }\n  100% { margin-bottom: 0 }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  overflow: hidden;\n  height: 2em;\n  width: 100%;\n  text-align: center;\n  margin: 0 auto;\n  justify-content: center;\n`;\n\nconst DotWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst TextWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  color: black;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nconst Dot = styled.div<Props>`\n  background-color: black;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  margin: 0 5px;\n  animation: ${BounceAnimation} 0.5s linear infinite;\n  animation-delay: ${(props) => props.delay};\n`;\n\nfunction Loading() {\n  return (\n    <Container>\n      <TextWrapper>Loading</TextWrapper>\n      <DotWrapper>\n        <Dot delay=\"\" />\n        <Dot delay=\".1s\" />\n        <Dot delay=\".2s\" />\n      </DotWrapper>\n    </Container>\n  );\n}\n\nexport default Loading;\n","import { useQuery } from \"@apollo/client\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { Document } from \"@contentful/rich-text-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { GetAbout } from \"../../helpers/queries\";\nimport Container from \"../Shared/container\";\nimport Loading from \"../Shared/loading\";\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst StyledText = styled.p`\n  text-align: left;\n  max-width: 50%;\n  align-items: flex-start;\n  margin-left: 20px;\n  margin-right: 100px;\n`;\nconst StyledImg = styled.img`\n  text-align: right;\n  align-items: flex-end;\n  width: 500px;\n  height: 500px;\n`;\n\nfunction About() {\n  const { data, loading } = useQuery(GetAbout);\n  return (\n    <Container>\n      <h1>About</h1>\n      {loading ? (\n        <Loading />\n      ) : (\n        data.aboutCollection.items.map(\n          (document: { text: { json: Document }; image: { url: string } }) => (\n            <Wrapper>\n              <StyledText>\n                {documentToReactComponents(document.text.json)}\n              </StyledText>\n              <StyledImg src={document.image.url} />\n            </Wrapper>\n          )\n        )\n      )}\n    </Container>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  link: string;\n  image: string;\n  title: string;\n}\n\nconst Border = styled.div`\n  width: 25%;\n  margin: 50px;\n  height: 300px;\n  border-radius: 10px;\n  border: 10px solid black;\n  overflow: hidden;\n  position: relative;\n  display: inline-block;\n\n  &:hover div:before {\n    display: block;\n  }\n  &:hover div {\n    display: block;\n  }\n`;\n\nconst StyledThumbnail = styled.div<Props>`\n  height: 100%;\n  width: 100%;\n  background-image: url(${(props) => props.image});\n  background-position: center;\n  background-size: cover;\n  vertical-align: bottom;\n  transition: all 0.5s;\n\n  &:before {\n    content: \"\";\n    display: none;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: gray;\n    opacity: 0.5;\n  }\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nconst Text = styled.div`\n  display: none;\n  font-size: 35px;\n  font-weight: bold;\n  color: white !important;\n  text-align: center;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 50px;\n  text-decoration: none;\n`;\n\nfunction Thumbnail(props: Props) {\n  return (\n    <Border>\n      <Link to={props.link}>\n        <StyledThumbnail className=\"project\" {...props}>\n          <Text>{props.title}</Text>\n        </StyledThumbnail>\n      </Link>\n    </Border>\n  );\n}\n\nexport default Thumbnail;\n","import { DocumentNode, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport Loading from \"../components/Shared/loading\";\nimport ThumbnailData from \"../components/Shared/thumbnailData\";\nimport Thumbnail from \"../components/thumbnails/thumbnail\";\n\ninterface Props {\n  query: DocumentNode;\n  collection: string;\n  link: string;\n}\n\nfunction ThumbnailHelper({ query, collection, link }: Props) {\n  const { data, loading } = useQuery(query);\n  return loading ? (\n    <Loading />\n  ) : (\n    data[collection].items.map((thumbnailData: ThumbnailData) => (\n      <Thumbnail\n        title={thumbnailData.title}\n        image={thumbnailData.image.url}\n        link={link + thumbnailData.sys.id}\n        key={thumbnailData.title}\n      />\n    ))\n  );\n}\n\nexport default ThumbnailHelper;\n","import React from \"react\";\nimport { GetArticlesThumbnailInfo } from \"../../helpers/queries\";\nimport ThumbnailHelper from \"../../helpers/thumbnailHelper\";\nimport Container from \"../Shared/container\";\n\nfunction Articles() {\n  return (\n    <Container>\n      <h1>Articles</h1>\n      <ThumbnailHelper\n        query={GetArticlesThumbnailInfo}\n        collection=\"articleCollection\"\n        link=\"/articles/\"\n      />\n    </Container>\n  );\n}\n\nexport default Articles;\n","import React from \"react\";\nimport { GetProjectThumbnailInfo } from \"../../helpers/queries\";\nimport ThumbnailHelper from \"../../helpers/thumbnailHelper\";\nimport Container from \"../Shared/container\";\n\n\nfunction Projects() {\n  return (\n    <Container>\n      <h1>Projects</h1>\n     <ThumbnailHelper query={GetProjectThumbnailInfo} collection=\"projectCollection\" link=\"/projects/\" />\n    </Container>\n  );\n}\n\nexport default Projects;\n","import React from \"react\"\nimport Container from \"../Shared/container\";\nimport Loading from \"../Shared/loading\";\n \nfunction Contact() {\n  return (\n    <Container>\n      <h1>Contact</h1>\n      <Loading />\n      <h1>Under construction</h1>\n    </Container>\n  )\n}\n \nexport default Contact;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst navLinks = [\n  {\n    label: \"About\",\n    href: \"/\",\n  },\n  {\n    label: \"Projects\",\n    href: \"/projects\",\n  },\n  {\n    label: \"Articles\",\n    href: \"/articles\",\n  },\n  {\n    label: \"Contact\",\n    href: \"/contact\",\n  },\n];\n\nconst NavItem = styled(Link)`\n  width: 189px;\n  height: 70px;\n  overflow: hidden;\n  border-radius: 20px;\n  text-decoration: none;\n  font-size: 2em;\n  color: black;\n  font-weight: bold;\n  padding: 0 0.5em;\n  margin: 0 1em;\n\n  &:hover {\n    background-color: rgba(122, 122, 122, 0.37);\n  }\n`;\n\nconst NavLinks = () => {\n  return (\n    <div>\n      {navLinks.map(({ label, href }) => (\n        <NavItem to={href} key={label}>{label}</NavItem>\n      ))}\n    </div>\n  );\n};\nexport default NavLinks;\n","import React from \"react\";\nimport { AppBar } from \"@material-ui/core\";\nimport NavLinks from \"./navLinks\";\nimport styled from \"styled-components\";\n\nconst HeaderStyle = styled(AppBar)`\n  box-sizing: border-box;\n  height: 79px;\n  background-color: #ffffff;\n  overflow: hidden;\n  border: 10px solid #000000;\n  display: flex;\n  justify-content: center;\n  box-flex: center;\n`;\n\nconst TextRight = styled.div`\n  text-align: right;\n  width: 50%;\n  display: inline-block;\n`;\n\nconst TextLeft = styled.div`\n  text-align: left;\n  width: 49%;\n  display: inline-block;\n  font-size: 2em;\n  color: black;\n  font-weight: bold;\n  padding: 0 0.5em;\n`;\n\nconst Header = () => {\n  return (\n    <HeaderStyle position=\"static\">\n      <div>\n        <TextLeft>Tomas Henry Adams</TextLeft>\n        <TextRight>\n          <NavLinks />\n        </TextRight>\n      </div>\n    </HeaderStyle>\n  );\n};\n\nexport default Header;\n","import { useQuery } from \"@apollo/client\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { DocumentNode } from \"graphql\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Loading from \"../components/Shared/loading\";\n\ninterface Props {\n  query: DocumentNode;\n  collection: string;\n}\nconst MainImage = styled.img`\n  height: 150px;\n  width: 300px;\n  margin-top: 50px;\n  margin-bottom: 0px;\n`;\n\nconst Title = styled.h1`\n  font-size: 40px;\n`;\n\nfunction DocumentHelper({ query, collection }: Props) {\n  const { data, loading } = useQuery(query);\n  return loading ? (\n    <Loading />\n  ) : (\n    <div>\n      <MainImage src={data[collection].image.url} alt=\"\" />\n      <Title>{data.project.title}</Title>\n      {documentToReactComponents(data.project.text.json)}\n    </div>\n  );\n}\n\nexport default DocumentHelper;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DocumentHelper from \"../../helpers/documentHelper\";\nimport { GetProject } from \"../../helpers/queries\";\nimport Container from \"../Shared/container\";\n\ntype TParams = { projectId: string };\n\nfunction Project({ match }: RouteComponentProps<TParams>) {\n  return (\n    <Container>\n      <DocumentHelper\n        query={GetProject(match.params.projectId)}\n        collection=\"project\"\n      />\n    </Container>\n  );\n}\n\nexport default Project;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport DocumentHelper from \"../../helpers/documentHelper\";\nimport { GetArticle } from \"../../helpers/queries\";\nimport Container from \"../Shared/container\";\n\ntype TParams = { articleId: string };\n\nfunction Article({ match }: RouteComponentProps<TParams>) {\n  return (\n    <Container>\n      <DocumentHelper\n        query={GetArticle(match.params.articleId)}\n        collection=\"project\"\n      />\n    </Container>\n  );\n}\n\nexport default Article;\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./components/about\";\nimport Articles from \"./components/articles\";\nimport Projects from \"./components/projects\";\nimport Contact from \"./components/contact\";\nimport Header from \"./components/header\";\nimport Project from \"./components/projects/project\";\nimport Article from \"./components/articles/article\";\n\nconst Routing = () => {\n    return (\n      <Router>\n        <Header />\n        <Route exact path=\"/projects\" component={Projects} />\n        <Route exact path=\"/articles\" component={Articles} />\n        <Route exact path=\"/\" component={About} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route exact path=\"/projects/:projectId\" component={Project} />\n        <Route exact path=\"/articles/:articleId\" component={Article} />\n      </Router>\n    );\n  };\n\nexport default Routing;\n","import React from \"react\";\nimport { CssBaseline, useMediaQuery } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport \"./App.css\";\nimport Routing from \"./Routing\";\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: { main: \"#EC4846\" },\n          success: { main: \"#5ac328\" },\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n        typography: {\n          fontFamily: [\"Poppins\", \"Arial\"].join(\",\"),\n        },\n      }),\n    [prefersDarkMode]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routing />\n    </ThemeProvider>\n    // <div>\n    //   {loading ? <h2>Loading</h2> : (\n    //     data.projectCollection.items.map((project: { title: string; image: { url: string; }; link: string; }) => (\n    //       <h3>{project.title} {project.image.url} {project.link}</h3>\n    //     ))\n    //   )}\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst Client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://graphql.contentful.com/content/v1/spaces/pystbp1i77y9\",\n  headers: {\n    Authorization: `Bearer v1kpSdemWSYklH6rtTBD5Mn8L4fEa0OOuVIoTckDF_E`,\n  },\n});\n\nexport default Client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Client from \"./helpers/apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={Client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}